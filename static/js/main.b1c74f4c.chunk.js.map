{"version":3,"sources":["Albums.js","ArtistCounter.js","FilterArtist.js","FilterDate.js","App.js","index.js"],"names":["Albums","props","artist","artists","className","albums","slice","map","style","src","coverArt","url","name","releaseDate","href","target","rel","ArtistCounter","length","FilterArtist","type","onKeyUp","event","onTextChange","value","FilterDate","onChange","App","today","Date","state","isLoading","user","next","filterString","filterDate","currentDate","getFullYear","getMonth","getDate","accessToken","queryString","parse","window","location","search","access_token","this","setState","fetch","headers","then","response","json","data","display_name","catch","error","artistData","items","albumDataPromises","Promise","all","albumDatas","forEach","albumData","i","includes","substring","indexOf","release_date","external_urls","spotify","images","sort","a","b","nameA","toLowerCase","nameB","item","console","log","artistsToRender","filter","text","date","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1c74f4c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Albums(props) {\r\n  let artist = props.artists\r\n  return (\r\n    <div className='album-layout'>\r\n      <ul>\r\n        {artist.albums.slice(0,1).map(albums => \r\n          <li style={{'list-style': 'none'}}>\r\n            <div className='album-content'>\r\n              <img src={albums.coverArt.url} className='album-cover'/>\r\n              <div className='description'>\r\n                <h1 className='artist-name'>{artist.name}</h1>\r\n                <br></br>\r\n                <h1 className='album-title'>{albums.name}</h1>\r\n                <br></br>\r\n                <h1 className='release-date'>Release Date: {albums.releaseDate}</h1>\r\n                <br></br>\r\n                <a className='spotify-btn-bg' href={albums.url} target='_blank' rel='noopener noreferrer'>\r\n                  <button className='open-in-spotify-btn'>Open In Spotify</button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </li> \r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ArtistCounter(props) {\r\n  let artists = props.artists\r\n  return (\r\n    <div className='artist-counter'>\r\n      <h2>{artists.length} followed artists</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FilterArtist(props) {\r\n  return (\r\n    <div className='filter'>\r\n      <span>Filter by Artist:</span>\r\n      <input className='filter-input' type=\"text\" onKeyUp={event => \r\n        props.onTextChange(event.target.value)}/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FilterDate(props) {\r\n  return (\r\n    <div className='filter'>\r\n      <span>Filter by Date:</span>\r\n      <input className='filter-input' type=\"date\" onChange={event =>\r\n        props.onChange(event.target.value)}/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\nimport './App.css'\nimport axios from 'axios'\nimport queryString from 'query-string'\nimport Albums from './Albums'\nimport ArtistCounter from './ArtistCounter'\nimport FilterArtist from './FilterArtist'\nimport FilterDate from './FilterDate'\nimport Pagination from './Pagination'\n\nclass App extends Component {\n  constructor() {\n    super();\n    let today = new Date()\n    this.state = {\n      isLoading: false,\n      user: {\n        name: '',\n      },\n      artists: [{\n        name: '',\n        href: '',\n        albums: [],\n      }],\n      next: 'https://api.spotify.com/v1/me/following?limit=50&type=artist',\n      filterString: '',\n      filterDate: '2018-01-01',\n      currentDate: today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate(),\n    }\n  }\n\n  componentDidMount() {\n    let parsedURI = queryString.parse(window.location.search)\n    let accessToken = parsedURI.access_token\n    if(!accessToken)\n      return\n    \n    // fetch user info\n    this.setState({isLoading: true})\n    fetch('https://api.spotify.com/v1/me', {\n      headers: {'Authorization': 'Bearer ' + accessToken}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      user: {\n        isLoading: false,\n        name: data.display_name,\n      }\n    }))\n    .catch(error => this.setState({\n      error,\n      isLoading: false,\n    }))\n    \n    // fetch followed artist album info\n    this.setState({isLoading: true})\n    fetch(this.state.next, {\n      headers: {'Authorization': 'Bearer ' + accessToken}\n    }).then(response => response.json())\n    .then(artistData => {\n      this.setState({\n        isLoading: false,\n        next: artistData.artists.next\n      })\n      let artists = artistData.artists.items  // artist data as json\n      let albumDataPromises = artists.map(artist => {   // map over each artist and fetch albums\n        let responsePromise = fetch(artist.href + '/albums?offset=0&limit=50&include_groups=album,single', {\n          headers: {'Authorization': 'Bearer ' + accessToken}\n        })\n        let albumDataPromise = responsePromise.then(response => response.json())  // album data as json\n        return albumDataPromise\n      })\n      let allAlbumDataPromises = Promise.all(albumDataPromises)\n      let albumsPromise = allAlbumDataPromises.then(albumDatas => {\n        albumDatas.forEach((albumData, i) => {\n          artists[i].albums = albumData.items\n            .map(albumData => ({\n              name: albumData.name.includes('(') ? albumData.name.substring(0, albumData.name.indexOf('(')) : albumData.name,\n              releaseDate: albumData.release_date,\n              url: albumData.external_urls.spotify,\n              coverArt: albumData.images[0],\n            }))\n        })\n        return artists\n      })\n      return albumsPromise\n    })\n    .then(artists => this.setState({\n      artists: artists.sort((a, b) => {\n        let nameA = a.name.toLowerCase()\n        let nameB = b.name.toLowerCase()\n        if (nameA < nameB) //sort string ascending\n         return -1;\n        if (nameA > nameB)\n         return 1;\n        return 0; //default return value (no sorting)\n       }).map(item => {\n        return {\n          name: item.name,\n          albums: item.albums\n        }\n    })\n    }))\n    .catch(error => this.setState({\n      error,\n      isLoading: false,\n    }))\n  }\n  \n  render() {\n    function gotoNextPage() {\n      this.setState({ \n\n      })\n    }\n    console.log(this.state)\n    // array of followed artists\n    let artistsToRender =\n      this.state.user &&    // checks if there is a user that follows at least one artist\n      this.state.artists\n        ? this.state.artists.filter(artists =>\n          artists.name.toLowerCase().includes(this.state.filterString.toLowerCase()))\n        : []\n\n    /*artistToRender = artistToRender.map(artists => \n      artists.albums.forEach((albums, i) => {\n        artists[i].albums = artists.albums.filter(artists.albums[i].releaseDate > this.state.filterDate)\n      }))*/\n\n    if(this.state.isLoading) {\n      return(\n        <p className='loading'>Loading...</p>\n      )\n    }\n\n    return (\n      <div className=\"app\">\n        {this.state.user.name ?\n        <div>\n          <h1 className='home-page-header'>\n            {this.state.user.name}'s Playlists\n          </h1>\n          <ArtistCounter artists={this.state.artists}/>\n          <div className='filter'>\n            <FilterArtist onTextChange={text => {\n                this.setState({filterString: text})\n              }}/>\n            <FilterDate onChange={date =>\n              this.setState({filterDate: date})\n            }/>\n          </div>\n          {artistsToRender.map(artists => \n            <Albums artists={artists} />\n          )}\n        </div> : <button onClick={() => {\n            window.location = window.location.href.includes('localhost') \n              ? 'http://localhost:8888/login' \n              : 'https://spotifynewreleasesbackend.herokuapp.com/login' }\n          }\n          className='sign-in-button'>Sign in with Spotify</button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
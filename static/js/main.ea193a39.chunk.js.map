{"version":3,"sources":["Albums.js","FilterArtist.js","FilterDate.js","App.js","index.js"],"names":["Albums","props","artist","artists","filterDate","albumsFiltered","albums","filter","album","releaseDate","map","index","key","style","listStyle","className","src","coverArt","url","alt","name","href","target","rel","FilterArtist","type","onKeyUp","event","onTextChange","value","FilterDate","today","Date","getMonth","getFullYear","getDate","placeholder","onChange","App","state","isLoading","numFollowed","user","next","filterString","filterBy","prevProps","prevState","this","fetchData","accessToken","queryString","parse","window","location","search","access_token","setState","fetch","headers","Authorization","then","response","json","data","display_name","catch","error","console","log","artistData","total","albumDataPromises","items","Promise","all","albumDatas","forEach","albumData","i","includes","substring","indexOf","release_date","external_urls","spotify","images","fetchedArtists","currentFilterDate","item","currentAlbum","sort","a","b","nameA","toLowerCase","nameB","artistsToRender","text","date","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea193a39.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Albums(props) {\r\n  let artist = props.artists\r\n  let filterDate = props.filterDate\r\n  let albumsFiltered = artist.albums.filter(function (album) {\r\n    return album.releaseDate >= filterDate\r\n  })\r\n  return (\r\n    <>\r\n      {albumsFiltered.map((albums, index) => (\r\n        <li key={index} style={{ listStyle: 'none' }}>\r\n          <div className='album-content'>\r\n            <img\r\n              src={albums.coverArt.url}\r\n              className='album-cover'\r\n              alt={albums.name}\r\n            />\r\n            <div className='description'>\r\n              <div className='artist-name'>{artist.name}</div>\r\n              <div className='album-title'>{albums.name}</div>\r\n              <div className='release-date'>\r\n                Release Date: {albums.releaseDate}\r\n              </div>\r\n              <a\r\n                className='spotify-btn-bg'\r\n                href={albums.url}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n              >\r\n                <button className='open-in-spotify-btn'>Open In Spotify</button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FilterArtist(props) {\r\n  return (\r\n    <div className='filter'>\r\n      <span>Filter by Artist:</span>\r\n      <input\r\n        className='filter-input'\r\n        type='text'\r\n        onKeyUp={(event) => props.onTextChange(event.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FilterDate(props) {\r\n  let today = new Date()\r\n  let filterDate =\r\n    (today.getMonth() - 2 === 0\r\n      ? today.getFullYear() - 1\r\n      : today.getFullYear()) +\r\n    '-' +\r\n    (today.getMonth() - 2 === 0 ? 12 : today.getMonth() - 2) +\r\n    '-' +\r\n    today.getDate()\r\n  return (\r\n    <div className='filter'>\r\n      <span>Filter by Date:</span>\r\n      <input\r\n        className='filter-input'\r\n        placeholder='2020-01-01'\r\n        type='date'\r\n        onChange={(event) => {\r\n          if (event.target.value === '') {\r\n            props.onChange(filterDate)\r\n          } else {\r\n            props.onChange(event.target.value)\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport './App.css'\r\nimport queryString from 'query-string'\r\nimport Albums from './Albums'\r\nimport FilterArtist from './FilterArtist'\r\nimport FilterDate from './FilterDate'\r\nimport FilterBy from './FilterBy'\r\nimport axios from 'axios'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let today = new Date()\r\n    this.state = {\r\n      isLoading: false,\r\n      numFollowed: 0,\r\n      user: {\r\n        name: '',\r\n      },\r\n      artists: [\r\n        {\r\n          name: '',\r\n          href: '',\r\n          albums: [],\r\n        },\r\n      ],\r\n      next: 'https://api.spotify.com/v1/me/following?limit=50&type=artist',\r\n      filterString: '',\r\n      filterDate:\r\n        (today.getMonth() - 2 === 0\r\n          ? today.getFullYear() - 1\r\n          : today.getFullYear()) +\r\n        '-' +\r\n        (today.getMonth() - 2 === 0\r\n          ? 12\r\n          : today.getMonth() - 2 < 10\r\n          ? '0' + (today.getMonth() - 2)\r\n          : today.getMonth() - 2) +\r\n        '-' +\r\n        (today.getDate() >= 10 ? today.getDate() : '0' + today.getDate()),\r\n      filterBy: 'artist',\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.next !== prevState.next) {\r\n      this.fetchData()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n  }\r\n\r\n  fetchData() {\r\n    let parsedURI = queryString.parse(window.location.search)\r\n    let accessToken = parsedURI.access_token\r\n    if (!accessToken) return\r\n    this.setState({ isLoading: true })\r\n\r\n    // fetch user info\r\n    fetch('https://api.spotify.com/v1/me', {\r\n      headers: { Authorization: 'Bearer ' + accessToken },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          user: {\r\n            isLoading: false,\r\n            name: data.display_name,\r\n          },\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error,\r\n          isLoading: false,\r\n        })\r\n        console.log(error)\r\n      })\r\n\r\n    // fetch followed artist album info\r\n    this.setState({ isLoading: true })\r\n    if (this.state.next !== null) {\r\n      fetch(this.state.next, {\r\n        headers: { Authorization: 'Bearer ' + accessToken },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((artistData) => {\r\n          if (artistData.artists) {\r\n            this.setState({\r\n              isLoading: false,\r\n              numFollowed: artistData.artists.total,\r\n              next: artistData.artists.next,\r\n            })\r\n          } else {\r\n            this.setState({\r\n              isLoading: false,\r\n            })\r\n          }\r\n          // artists data\r\n          let artists\r\n          if (artistData.artists) {\r\n            artists = artistData.artists.items // a.artists is undefined\r\n          } else {\r\n            console.log(artistData)\r\n            return\r\n          }\r\n\r\n          // map over each artist and fetch albums\r\n          let albumDataPromises = artists.map((artist) => {\r\n            let responsePromise = fetch(\r\n              artist.href +\r\n                '/albums?offset=0&limit=50&include_groups=album,single',\r\n              {\r\n                headers: {\r\n                  Authorization: 'Bearer ' + accessToken,\r\n                },\r\n              },\r\n            )\r\n            let albumDataPromise = responsePromise.then((response) =>\r\n              response.json(),\r\n            )\r\n            return albumDataPromise\r\n          })\r\n          let allAlbumDataPromises = Promise.all(albumDataPromises)\r\n          let albumsPromise = allAlbumDataPromises.then((albumDatas) => {\r\n            albumDatas.forEach((albumData, i) => {\r\n              if (!albumData.items) {\r\n                console.log(albumData)\r\n                return\r\n              }\r\n              try {\r\n                artists[i].albums = albumData.items.map((albumData) => ({\r\n                  name: albumData.name.includes('(')\r\n                    ? albumData.name.substring(0, albumData.name.indexOf('('))\r\n                    : albumData.name, // e.items is undefined\r\n                  releaseDate: albumData.release_date,\r\n                  url: albumData.external_urls.spotify,\r\n                  coverArt: albumData.images[0],\r\n                }))\r\n              } catch (error) {\r\n                console.log(error)\r\n              }\r\n            })\r\n            return artists\r\n          })\r\n          return albumsPromise\r\n        })\r\n        .then((fetchedArtists) => {\r\n          let currentFilterDate = this.state.filterDate\r\n          if (this.state.artists) {\r\n            this.setState({\r\n              artists: [\r\n                ...this.state.artists,\r\n                ...fetchedArtists.map((item) => {\r\n                  if (item.albums) {\r\n                    return {\r\n                      name: item.name,\r\n                      albums: item.albums.filter(function (currentAlbum) {\r\n                        return currentAlbum.releaseDate >= currentFilterDate\r\n                      }),\r\n                    }\r\n                  } else {\r\n                    return {\r\n                      name: item.name,\r\n                      albums: [],\r\n                    }\r\n                  }\r\n                }),\r\n              ],\r\n            })\r\n          }\r\n          this.setState({\r\n            artists: this.state.artists.sort((a, b) => {\r\n              let nameA = a.name.toLowerCase()\r\n              let nameB = b.name.toLowerCase()\r\n              if (nameA < nameB) return -1\r\n              if (nameA > nameB) return 1\r\n              return 0\r\n            }),\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            error,\r\n            isLoading: false,\r\n          })\r\n          console.log(error)\r\n        })\r\n    } else {\r\n      this.setState({\r\n        isLoading: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // array of followed artists\r\n    let artistsToRender =\r\n      this.state.user && this.state.artists\r\n        ? this.state.artists.filter((artists) =>\r\n            artists.name\r\n              .toLowerCase()\r\n              .includes(this.state.filterString.toLowerCase()),\r\n          )\r\n        : []\r\n\r\n    if (this.state.isLoading) {\r\n      return <p className='loading'>Loading...</p>\r\n    }\r\n\r\n    return (\r\n      <div className='app'>\r\n        {this.state.user.name ? (\r\n          <div>\r\n            <h1 className='home-page-header'>\r\n              {this.state.user.name}'s New Releases\r\n            </h1>\r\n            <h2 className='artist-counter'>\r\n              {this.state.numFollowed} followed artists\r\n            </h2>\r\n            <div className='filter'>\r\n              <FilterArtist\r\n                onTextChange={(text) => {\r\n                  this.setState({ filterString: text })\r\n                }}\r\n              />\r\n              {/* <FilterBy\r\n                                onChange={(filter) =>\r\n                                    this.setState({ filterBy: filter })\r\n                                }\r\n                            /> */}\r\n              <FilterDate\r\n                onChange={(date) => this.setState({ filterDate: date })}\r\n              />\r\n            </div>\r\n            <div className='album-layout'>\r\n              {artistsToRender.map((artists, index) => (\r\n                <Albums\r\n                  key={index}\r\n                  artists={artists}\r\n                  filterDate={this.state.filterDate}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              window.location = window.location.href.includes('localhost')\r\n                ? 'http://localhost:8888/login'\r\n                : 'https://spotifynewreleasesbackend.herokuapp.com/login'\r\n            }}\r\n            className='sign-in-button'\r\n          >\r\n            Sign in with Spotify\r\n          </button>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n// renders the app component at the root element (index.html)\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}